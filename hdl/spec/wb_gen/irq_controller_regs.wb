peripheral {
  name = "IRQ controller registers";
  description = "Wishbone slave for registers related to IRQ controller";
  hdl_entity = "irq_controller_regs";

  prefix = "irq_ctrl";

  reg {
    name = "Interrupt controller status register";
    description = "";
    prefix = "status";

    field {
      name = "Multiple interrupt";
      description = "Multiple interrupts occurs before irq source is read.";
      prefix = "mult_irq";
      type = BIT;
      load = LOAD_EXT;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
    };
  };

  reg {
    name = "Interrrupt sources register ";
    description = "Indicates the interrupt source.\nWrite '1' to clear a bit.";
    prefix = "src";

    field {
      name = "Interrupt sources";
      type = SLV;
      load = LOAD_EXT;
      size = 32;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
    };
  };

  reg {
    name = "Interrupt enable mask register";
    description = "Bit mask to independently enable interrupt sources.";
    prefix = "en_mask";

    field {
      name = "Interrupt enable mask";
      type = SLV;
      size = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

};
